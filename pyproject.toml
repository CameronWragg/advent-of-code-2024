[tool.poetry]
name = "src"
version = "0.1.0"
description = "Project repository for Advent of Code 2024"
authors = ["CameronWragg"]
license = "GPL-3.0-or-later"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"

[tool.poetry.group.dev.dependencies]
ruff = "^0.8"
pre-commit = "^4.0"
pyright = "^1.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fix = true
line-length = 99
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins
    "ARG",  # flake8-unused-arguments
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "C90",  # mccabe
    "COM",  # flake8-commas
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle errors
    "ERA",  # flake8-eradicate
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "PIE",  # flake8-pie
    "PGH",  # pygrep-hooks
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # ruff checks
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "TC",   # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["src"]

[tool.pyright]
include = ["src"]
strict = ["src"]
